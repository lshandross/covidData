% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_data.R
\name{load_data}
\alias{load_data}
\title{Assemble a data frame of incident and cumulative cases, deaths or hospitalizations due to
COVID-19 as they were available as of one or more past dates.}
\usage{
load_data(
  issues = NULL,
  as_of = NULL,
  location_code = NULL,
  spatial_resolution = "state",
  temporal_resolution = "weekly",
  measure = "deaths",
  geography = c("US", "global"),
  source = NULL,
  drop_last_date = FALSE
)
}
\arguments{
\item{issues}{vector of issue dates (i.e. report dates) to use for querying data,
either \code{Date} objects or strings in the format 'yyyy-mm-dd'. Data for the
requested measures that were reported or updated exactly on the specified
issue date(s) will be returned. If multiple issue dates are provided, the result
includes the data for all such issue dates.}

\item{as_of}{character vector of "as of" dates to use for querying truths in
format 'yyyy-mm-dd'. For each spatial unit and temporal reporting unit, the last
available data with an issue date on or before the given \code{as_of} date are returned.}

\item{location_code}{character vector of location codes. Default to NULL.
For US locations, this should be a list of FIPS code or 'US'
For ECDC locations, this should be a list of location name abbreviation.}

\item{spatial_resolution}{character vector specifying spatial unit types to
include: one or more of 'county', 'state' and/or 'national'.
Default to 'state'.
Note that 'county' is not available for hospitalization data.
When source is "covidcast", this parameter has to match with location_code, if specified.}

\item{temporal_resolution}{string specifying temporal resolution
to include: one of 'daily' or 'weekly'}

\item{measure}{string specifying measure of disease dynamics:
one of 'deaths', 'cases', 'hospitalizations', or 'flu hospitalizations'.
The first three of these refer to measures of covid intensity.
Default to 'deaths'.}

\item{geography}{character, which data to read. Default is "US", other option is
"global".
Note that "global" is not available for hospitalization data and "covidcast" source.}

\item{source}{string specifying data source.  Currently supported sources are
"jhu" or "covidcast" for the "deaths" or "cases" measures;
"healthdata" or "covidcast" for the "hospitalizations" and
"flu hospitalizations" measures.
Default to NULL which means "healthdata" for hospitalization data and "jhu"
for all other measures.}

\item{drop_last_date}{boolean indicating whether to drop the last 1 day of
data for the influenza and COVID hospitalization signals. The last day of
data from the HHS data source is unreliable, so it is recommended to set this
to \code{TRUE}. However, the default is \code{FALSE} so that the function maintains
fidelity to the authoritative data source. This argument is ignored if the
\code{measure} is 'deaths' or 'cases'.}
}
\value{
data frame with columns location (fips code), date, inc, cum
}
\description{
Assemble a data frame of incident and cumulative cases, deaths or hospitalizations due to
COVID-19 as they were available as of one or more past dates.
}
\details{
Data for a specified \code{issue} are only returned if the data were first available
on that date, or were updated on that date. A warning is generated for any issue dates
for which no data were available.

A query based on an \code{as_of} date returns the data for the most recent
\code{issue} date that is on or before the specified \code{as_of} date.
A warning is generated for any \code{as_of} dates for which no data were
available; this only occurs if the \code{as_of} date is prior to any data release for the
specified measure.

If the user provides values for both \code{issue} and as_of, a warning is generated
and the argument for \code{issue} is ignored.

If multiple \code{issue} dates or \code{as_of} dates are provided, the result combines
the data for all such dates. If no value is provided for either \code{issue} or \code{as_of},
results for the most recent available \code{as_of} date are returned.
}
